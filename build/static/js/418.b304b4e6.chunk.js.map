{"version":3,"file":"static/js/418.b304b4e6.chunk.js","mappings":"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","sources":["assets/images/icons/social-google.svg","hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/Login3.js"],"sourcesContent":["var _path, _path2, _path3, _path4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSocialGoogle(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.06129 13.2253L4.31871 15.9975L1.60458 16.0549C0.793457 14.5504 0.333374 12.8292 0.333374 11C0.333374 9.23119 0.763541 7.56319 1.52604 6.09448H1.52662L3.94296 6.53748L5.00146 8.93932C4.77992 9.58519 4.65917 10.2785 4.65917 11C4.65925 11.783 4.80108 12.5332 5.06129 13.2253Z\",\n    fill: \"#FBBB00\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.4804 9.00732C21.6029 9.65257 21.6668 10.3189 21.6668 11C21.6668 11.7637 21.5865 12.5086 21.4335 13.2271C20.9143 15.6722 19.5575 17.8073 17.678 19.3182L17.6774 19.3177L14.6339 19.1624L14.2031 16.4734C15.4503 15.742 16.425 14.5974 16.9384 13.2271H11.2346V9.00732H17.0216H21.4804Z\",\n    fill: \"#518EF8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.6772 19.3176L17.6777 19.3182C15.8498 20.7875 13.5277 21.6666 11 21.6666C6.93783 21.6666 3.40612 19.3962 1.60449 16.0549L5.0612 13.2253C5.96199 15.6294 8.28112 17.3408 11 17.3408C12.1686 17.3408 13.2634 17.0249 14.2029 16.4734L17.6772 19.3176Z\",\n    fill: \"#28B446\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8085 2.78892L14.353 5.61792C13.3807 5.01017 12.2313 4.65908 11 4.65908C8.21963 4.65908 5.85713 6.44896 5.00146 8.93925L1.52658 6.09442H1.526C3.30125 2.67171 6.8775 0.333252 11 0.333252C13.5881 0.333252 15.9612 1.25517 17.8085 2.78892Z\",\n    fill: \"#F14336\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSocialGoogle);\nexport default __webpack_public_path__ + \"static/media/social-google.a57081bd95c2519caad91216a8dba3ad.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\r\n            berrydashboard.io\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\r\n            &copy; codedthemes.com\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport Google from 'assets/images/icons/social-google.svg';\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst FirebaseLogin = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const googleHandler = async () => {\r\n        console.error('Login');\r\n    };\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                color: 'grey.700',\r\n                                backgroundColor: theme.palette.grey[50],\r\n                                borderColor: theme.palette.grey[100]\r\n                            }}\r\n                        >\r\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\r\n                            </Box>\r\n                            Sign in with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                cursor: 'unset',\r\n                                m: 2,\r\n                                py: 0.5,\r\n                                px: 7,\r\n                                borderColor: `${theme.palette.grey[100]} !important`,\r\n                                color: `${theme.palette.grey[900]}!important`,\r\n                                fontWeight: 500,\r\n                                borderRadius: `${customization.borderRadius}px`\r\n                            }}\r\n                            disableRipple\r\n                            disabled\r\n                        >\r\n                            OR\r\n                        </Button>\r\n\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: 'info@codedthemes.com',\r\n                    password: '123456',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthLogin from '../auth-forms/AuthLogin';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n// ================================|| AUTH3 - LOGIN ||================================ //\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Hi, Welcome Back\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthLogin />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to=\"/pages/register/register3\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Don&apos;t have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["scripted","useRef","useEffect","current","direction","justifyContent","variant","component","Link","href","target","underline","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundColor","palette","primary","light","minHeight","others","useTheme","scriptedRef","useScriptRef","matchDownSM","useMediaQuery","breakpoints","down","customization","useSelector","state","checked","setChecked","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Grid","container","spacing","item","AnimateButton","Button","disableElevation","fullWidth","onClick","async","console","error","size","color","grey","borderColor","Box","mr","width","src","Google","alt","height","style","marginRight","alignItems","display","Divider","orientation","cursor","m","py","px","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","Stack","FormControlLabel","control","Checkbox","textDecoration","mt","AuthCardWrapper","to","Logo","secondary","main","gutterBottom","fontSize","textAlign","AuthLogin","AuthFooter"],"sourceRoot":""}